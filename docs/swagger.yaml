definitions:
  entity.User:
    properties:
      createdOn:
        type: string
      email:
        type: string
      isActive:
        type: boolean
      isDeleted:
        type: boolean
      modifiedOn:
        type: string
      profilePicture:
        type: string
      reOC:
        type: string
      role:
        type: string
      userId:
        type: string
      userRegisterId:
        type: string
      userType:
        type: string
    type: object
  user.UserDetailResponse:
    properties:
      ansp_id:
        type: string
      country:
        type: string
      created_date:
        type: string
      email:
        type: string
      first_name:
        type: string
      is_active:
        type: boolean
      last_name:
        type: string
      organization_id:
        type: string
      organization_name:
        type: string
      phone:
        type: string
      profile_picture:
        type: string
      reoc:
        type: string
      user_id:
        type: string
      user_name:
        type: string
      user_roles:
        items:
          $ref: '#/definitions/user.UserRole'
        type: array
      user_sora_role:
        type: string
      user_type:
        type: string
    type: object
  user.UserRequest:
    properties:
      email:
        type: string
      reoc:
        type: string
      user_role:
        type: string
      user_type:
        type: string
    required:
    - email
    - user_role
    - user_type
    type: object
  user.UserRole:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  user.UserStatusUpdate:
    properties:
      active:
        description: true for activation, false for deactivation
        type: boolean
      country:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      phone:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/user/{userid}:
    delete:
      consumes:
      - application/json
      description: Get User informations from oauth server
      parameters:
      - description: userid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserDetailResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get User informations from oauth server
      tags:
      - User
  /api/v1/user/{userid}/detail:
    get:
      consumes:
      - application/json
      description: Get User informations from oauth server
      parameters:
      - description: userid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserDetailResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get User informations from oauth server
      tags:
      - User
  /api/v1/user/register:
    post:
      consumes:
      - application/json
      description: Register
      parameters:
      - description: Custom UserRequest request
        in: body
        name: UserRequest
        required: true
        schema:
          $ref: '#/definitions/user.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Register
      tags:
      - User
  /api/v1/user/status:
    put:
      consumes:
      - application/json
      description: Get User informations from oauth server
      parameters:
      - description: userid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserStatusUpdate'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get User informations from oauth server
      tags:
      - User
swagger: "2.0"
